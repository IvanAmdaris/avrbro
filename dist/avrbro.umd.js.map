{"version":3,"file":"avrbro.umd.js","sources":["../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/index.js","../src/stk500v1/constants.js","../src/stk500v1/stk500-io.js","../src/utils.js","../src/stk500v1/stk500.js","../src/index.js","../src/hex-parser.js"],"sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol.for === 'function')\n    ? Symbol.for('nodejs.util.inspect.custom')\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","import { Buffer } from '../../node_modules/buffer'\n\nconst Resp_STK_INSYNC = 0x14\nconst Resp_STK_OK = 0x10\n\n\nexport default {\n  Cmnd_STK_GET_SYNC: 0x30,\n  Cmnd_STK_SET_DEVICE: 0x42,\n  Cmnd_STK_ENTER_PROGMODE: 0x50,\n  Cmnd_STK_LOAD_ADDRESS: 0x55,\n  Cmnd_STK_PROG_PAGE: 0x64,\n  Cmnd_STK_LEAVE_PROGMODE: 0x51,\n  Cmnd_STK_READ_SIGN: 0x75,\n\n  Sync_CRC_EOP: 0x20,\n\n  Resp_STK_OK: 0x10,\n  Resp_STK_INSYNC: 0x14,\n  Resp_STK_NOSYNC: 0x15,\n\n\n  Cmnd_STK_READ_PAGE: 0x74,\n\n\n  OK_RESPONSE: Buffer.from([Resp_STK_INSYNC, Resp_STK_OK])\n};\n","import { Buffer } from '../../node_modules/buffer'\nimport { bufferEqual } from '../utils'\nimport Statics from './constants'\n\nexport const receiveData = async ({ reader }, timeout, responseLength) => {\n  const startingBytes = [Statics.Resp_STK_INSYNC]\n  \n  let buffer = Buffer.alloc(0)\n  let started = false\n  let timeoutId = null\n  let isReading = false\n  let error = null\n\n  const finished = (err) => {\n    if (timeoutId) {\n      clearTimeout(timeoutId)\n    }\n    isReading = false\n    error = err\n  }\n\n  const handleChunk = (data) => {\n    console.log('chunk handled: ', data, new TextDecoder(\"utf-8\").decode(data))\n    let index = 0\n    while (!started && index < data.length) {\n      const byte = data[index]\n      if (startingBytes.indexOf(byte) !== -1) {\n        data = data.slice(index, data.length - index)\n        started = true\n      }\n      index++\n    }\n    if (started) {\n      buffer = Buffer.concat([buffer, data])\n    }\n    if (buffer.length > responseLength) {\n      finished(new Error('buffer overflow '+buffer.length+' > '+responseLength))\n    } else if (buffer.length == responseLength) {\n      finished()\n    }\n  }\n\n  if (timeout && timeout > 0) {\n    timeoutId = setTimeout(() => {\n      timeoutId = null\n      finished(new Error('receiveData timeout after ' + timeout + 'ms'))\n    }, timeout)\n  }\n\n  if (reader) {\n    isReading = true\n    while (isReading) {\n      try {\n        const { value, done } = await reader.read()\n        if (done) {\n          break\n        }\n        handleChunk(value)\n      } catch (err) {\n        console.log(err)\n      }\n    }\n    if (error) {\n      throw error\n    }\n    return buffer\n  } else {\n    throw new Error('serial port not found')\n  }\n}\n\nexport const sendCommand = async ({ reader, writer }, opt) => {\n  let timeout = opt.timeout || 0;\n  let responseData = null\n  let responseLength = 0\n  let error\n\n  if (opt.responseData && opt.responseData.length > 0) {\n    responseData = opt.responseData\n  }\n  if (responseData) {\n    responseLength = responseData.length\n  }\n  if (opt.responseLength) {\n    responseLength = opt.responseLength\n  }\n  let cmd = opt.cmd\n  if (cmd instanceof Array) {\n    cmd = Buffer.from(cmd.concat(Statics.Sync_CRC_EOP))\n  }\n  if (reader && writer) {\n    try {\n      console.log('will write: ', cmd)\n      writer.write(cmd)\n    } catch(err) {\n      throw new Error('Sending ' + cmd.toString('hex') + ': ' + err.message)\n    }\n    \n    console.log('wait response. length should be:' + responseLength)\n    try {\n      const data = await receiveData({ reader }, timeout, responseLength)\n      if (responseData && !bufferEqual(data, responseData)) {\n        throw new Error(cmd + ' response mismatch: ' + data.toString('hex') + ', ' + responseData.toString('hex'))\n      }\n      return data\n    } catch (err) {\n      throw new Error('Sending ' + cmd.toString('hex') + ': ' + err.message)\n    }\n  } else {\n    throw new Error('serial port not found')\n  }\n}\n","/**\n* Grabbed on https://github.com/substack/node-buffer-equal\n*/\n\nimport { Buffer } from '../node_modules/buffer'\n\nexport const bufferEqual = (a, b) => {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    return undefined\n  }\n  if (typeof a.equals === 'function') {\n    return a.equals(b)\n  }\n  if (a.length !== b.length) {\n    return false\n  }\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false\n    }\n  }\n  return true\n}","import { Buffer } from '../../node_modules/buffer'\nimport { bufferEqual } from '../utils'\nimport { sendCommand } from './stk500-io'\nimport Statics from './constants'\n\nexport const sync = async (serial, attempts, timeout) => {\n  console.log('sync')\n\n  const opt = {\n    cmd: [Statics.Cmnd_STK_GET_SYNC],\n    responseData: Statics.OK_RESPONSE,\n    timeout\n  }\n\n  let tries = 0\n\n  while (tries <= attempts) {\n    tries += 1\n    try {\n      const result = await sendCommand(serial, opt)\n      console.log('sync complete', result, tries)\n      return result\n    } catch (err) {\n      console.log(err)\n    }\n    if (tries <= attempts) {\n      console.log(`failed! will try again (${tries})`)\n    }\n  }\n  throw new Error(`Sync failed after ${attempts} attempts`)\n}\n\nconst verifySignature = async (serial, signature, timeout) => {\n  console.log(\"verify signature\")\n\n  const match = Buffer.concat([\n    Buffer.from([Statics.Resp_STK_INSYNC]),\n    signature,\n    Buffer.from([Statics.Resp_STK_OK])\n  ])\n\n  const opt = {\n    cmd: [Statics.Cmnd_STK_READ_SIGN],\n    responseLength: match.length,\n    timeout\n  }\n  try {\n    const data = await sendCommand(serial, opt)\n    if (data) {\n      console.log('confirm signature', data, data.toString('hex'))\n    } else {\n      console.log('confirm signature', 'no data')\n    }\n    return data\n  } catch (err) {\n    throw err\n  }\n}\n\nconst getSignature = async (serial, timeout) => {\n  console.log(\"get signature\")\n  const opt = {\n    cmd: [Statics.Cmnd_STK_READ_SIGN],\n    responseLength: 5,\n    timeout\n  }\n  try {\n    const data = await sendCommand(serial, opt)\n    console.log('getSignature', data)\n    return data\n  } catch (err) {\n    throw err\n  }\n}\n\nconst setOptions = async (serial, options, timeout) => {\n  console.log(\"set device\")  \n  const opt = {\n    cmd: [\n      Statics.Cmnd_STK_SET_DEVICE,\n      options.devicecode || 0,\n      options.revision || 0,\n      options.progtype || 0,\n      options.parmode || 0,\n      options.polling || 0,\n      options.selftimed || 0,\n      options.lockbytes || 0,\n      options.fusebytes || 0,\n      options.flashpollval1 || 0,\n      options.flashpollval2 || 0,\n      options.eeprompollval1 || 0,\n      options.eeprompollval2 || 0,\n      options.pagesizehigh || 0,\n      options.pagesizelow || 0,\n      options.eepromsizehigh || 0,\n      options.eepromsizelow || 0,\n      options.flashsize4 || 0,\n      options.flashsize3 || 0,\n      options.flashsize2 || 0,\n      options.flashsize1 || 0\n    ],\n    responseData: Statics.OK_RESPONSE,\n    timeout\n  }\n  try {\n    const data = await sendCommand(serial, opt)\n    console.log('setOptions', data)\n    return data\n  } catch (err) {\n    throw err\n  }\n}\n\nconst enterProgrammingMode = async (serial, timeout) => {\n  console.log(\"send enter programming mode\")\n  const opt = {\n    cmd: [Statics.Cmnd_STK_ENTER_PROGMODE],\n    responseData: Statics.OK_RESPONSE,\n    timeout\n  }\n  try {\n    const data = await sendCommand(serial, opt)\n    console.log(\"sent enter programming mode\", data)\n    return data\n  } catch (err) {\n    throw err\n  }\n}\n\nconst loadAddress = async (serial, useaddr, timeout) => {\n  console.log(\"load address\")\n  const addr_low = useaddr & 0xff\n  const addr_high = (useaddr >> 8) & 0xff\n  const opt = {\n    cmd: [\n      Statics.Cmnd_STK_LOAD_ADDRESS,\n      addr_low,\n      addr_high\n    ],\n    responseData: Statics.OK_RESPONSE,\n    timeout\n  }\n  try {\n    const data = await sendCommand(serial, opt)\n    console.log('loaded address', data)\n    return data\n  } catch (err) {\n    throw err\n  }\n}\n\nconst loadPage = async (serial, writeBytes, timeout) => {\n  console.log(\"load page\")\n  const bytes_low = writeBytes.length & 0xff\n  const bytes_high = writeBytes.length >> 8\n\n  const cmd = Buffer.concat([\n    Buffer.from([Statics.Cmnd_STK_PROG_PAGE, bytes_high, bytes_low, 0x46]),\n    writeBytes,\n    Buffer.from([Statics.Sync_CRC_EOP])\n  ])\n\n  const opt = {\n    responseData: Statics.OK_RESPONSE,\n    cmd,\n    timeout\n  }\n\n  try {\n    const data = await sendCommand(serial, opt)\n    console.log('loaded page', data)\n    return data\n  } catch (err) {\n    throw err\n  }\n}\n\nconst upload = async (serial, hex, pageSize, timeout) => {\n  console.log(\"program\")\n  let pageaddr = 0\n  let writeBytes\n  let useaddr\n\n  try {\n    while (pageaddr < hex.length) {\n      console.log(\"program page\")\n      useaddr = pageaddr >> 1\n      await loadAddress(serial, useaddr, timeout)\n      writeBytes = hex.slice(pageaddr, (hex.length > pageSize ? (pageaddr + pageSize) : hex.length - 1))\n      await loadPage(serial, writeBytes, timeout)\n      console.log(\"programmed page\")\n      pageaddr =  pageaddr + writeBytes.length\n      await new Promise((resolve) => {\n        setTimeout(() => resolve(\"done!\"), 4)\n      })\n      console.log(\"page done\")\n    }   \n  } catch (err) {\n    throw err\n  }\n  console.log(\"upload done\")\n  return true\n}\n\nconst exitProgrammingMode = async (serial, timeout) => {\n  console.log(\"send leave programming mode\")\n  const opt = {\n    cmd: [Statics.Cmnd_STK_LEAVE_PROGMODE],\n    responseData: Statics.OK_RESPONSE,\n    timeout\n  }\n  try {\n    const data = await sendCommand(serial, opt)\n    console.log('sent leave programming mode', data)\n    return data\n  } catch (err) {\n    throw err\n  }\n}\n\nconst verify = async (serial, hex, pageSize, timeout) => {\n  console.log(\"verify\")\n  let pageaddr = 0\n  let writeBytes\n  let useaddr\n\n  try {\n    while (pageaddr < hex.length) {\n      console.log(\"verify page\")\n      useaddr = pageaddr >> 1\n      await loadAddress(serial, useaddr, timeout)\n      writeBytes = hex.slice(pageaddr, (hex.length > pageSize ? (pageaddr + pageSize) : hex.length - 1))\n      await verifyPage(serial, writeBytes, pageSize, timeout)\n      console.log(\"verified page\")\n      pageaddr =  pageaddr + writeBytes.length\n      await new Promise((resolve) => {\n        setTimeout(() => resolve(\"done!\"), 4)\n      })\n      console.log(\"page done\")\n    }   \n  } catch (err) {\n    throw err\n  }\n  console.log(\"verify done\")\n  return true\n}\n\nconst verifyPage = async (serial, writeBytes, pageSize, timeout) => {\n  console.log(\"verify page\")\n  const match = Buffer.concat([\n    Buffer.from([Statics.Resp_STK_INSYNC]),\n    writeBytes,\n    Buffer.from([Statics.Resp_STK_OK])\n  ])\n  const size = writeBytes.length >= pageSize ? pageSize : writeBytes.length\n  const opt = {\n    cmd: [\n      Statics.Cmnd_STK_READ_PAGE,\n      (size>>8) & 0xff,\n      size & 0xff,\n      0x46\n    ],\n    responseLength: match.length,\n    timeout\n  }\n  try {\n    const data = await sendCommand(serial, opt)\n    console.log('confirm page', data, data.toString('hex'))\n    return data\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const bootload = async (serial, hex, opt) => {\n  const parameters = {\n    pagesizehigh: (opt.pagesizehigh<<8 & 0xff),\n    pagesizelow: opt.pagesizelow & 0xff\n  }\n\n  try {\n    // send two dummy syncs like avrdude does\n    await sync(serial, 3, opt.timeout)\n    await sync(serial, 3, opt.timeout)\n    await sync(serial, 3, opt.timeout)\n    const sign = Buffer.from(opt.signature)\n    await verifySignature(serial, sign, opt.timeout)\n    await setOptions(serial, parameters, opt.timeout)\n    await enterProgrammingMode(serial, opt.timeout)\n    await upload(serial, hex, opt.pageSize, opt.timeout)\n    await verify(serial, hex, opt.pageSize, opt.timeout)\n    await exitProgrammingMode(serial, opt.timeout)\n  } catch (err) {\n    throw err\n  }\n  return true\n}","import { parseIntelHex } from './hex-parser'\nimport { bootload } from './stk500v1/stk500'\n\n/**\n* Checks if the serial api is avalaible\n* As november 2019 it works only in Chrome with this flag enabled:\n*   chrome://flags/#enable-experimental-web-platform-features\n*/\nconst isAvailable = () => navigator && navigator.serial\n\n/**\n* Allow to parse/check hex file\n*/\nconst parseHex = (buffer) => {\n  const hex = parseIntelHex(buffer).data\n  console.log(hex)\n  return hex\n}\n\n/**\n* Open the connection with the serial port\n*/\nconst connect = async () => {\n  // Filter on devices with the Arduino USB vendor ID. Not yet implemented...\n  const requestOptions = {\n    filters: [{ vendorId: 0x2341 }]\n  }\n\n  // Request an Arduino from the user.\n  try {\n    const port = await navigator.serial.requestPort(requestOptions)\n    await port.open({ baudrate: 57600 })\n    const reader = port.readable.getReader()\n    const writer = port.writable.getWriter()\n    return {port, reader, writer}\n  } catch(e) {\n    console.log(e)\n  }\n  return null\n}\n\n/**\n* Reset board with cycle DTR\n*/\nconst reset = async (serial) => {\n  serial.port.setSignals({ rts: true, dtr: true })\n  await new Promise(resolve => setTimeout(resolve, 250))\n  serial.port.setSignals({ rts: false, dtr: false })\n  await new Promise(resolve => setTimeout(resolve, 50))\n}\n\n/**\n* Flash the device connected on the given serial port with the given .hex file buffer.\n* Only works with stk500 version 1 for now...\n*/\nconst flash = async (serial, hexData, board) => {\n  console.log('will flash .hex file on board...')\n  try {\n    await reset(serial)\n    const flashResult = await bootload(serial, hexData, board)\n    console.log('flash complete successfully')\n    return flashResult\n  } catch (err) {\n    console.log('encountered errors during flash :(')\n    throw err\n  }\n}\n\nexport default {\n  isAvailable,\n  connect,\n  parseHex,\n  flash\n}","/**\n* Grabbed on https://github.com/bminer/intel-hex.js\n*/\n\nimport { Buffer } from '../node_modules/buffer'\n\n//Intel Hex record types\nconst DATA = 0,\n  END_OF_FILE = 1,\n  EXT_SEGMENT_ADDR = 2,\n  START_SEGMENT_ADDR = 3,\n  EXT_LINEAR_ADDR = 4,\n  START_LINEAR_ADDR = 5;\n\nconst EMPTY_VALUE = 0xFF;\n\n/* intel_hex.parse(data)\n  `data` - Intel Hex file (string in ASCII format or Buffer Object)\n  `bufferSize` - the size of the Buffer containing the data (optional)\n  \n  returns an Object with the following properties:\n    - data - data as a Buffer Object, padded with 0xFF\n      where data is empty.\n    - startSegmentAddress - the address provided by the last\n      start segment address record; null, if not given\n    - startLinearAddress - the address provided by the last\n      start linear address record; null, if not given\n  Special thanks to: http://en.wikipedia.org/wiki/Intel_HEX\n*/\nexport const parseIntelHex = (data, bufferSize) => {\n  if(data instanceof Buffer)\n    data = data.toString(\"ascii\");\n  //Initialization\n  var buf = Buffer.alloc(bufferSize || 8192),\n    bufLength = 0, //Length of data in the buffer\n    highAddress = 0, //upper address\n    startSegmentAddress = null,\n    startLinearAddress = null,\n    lineNum = 0, //Line number in the Intel Hex string\n    pos = 0; //Current position in the Intel Hex string\n  const SMALLEST_LINE = 11;\n  while(pos + SMALLEST_LINE <= data.length)\n  {\n    //Parse an entire line\n    if(data.charAt(pos++) !== \":\")\n      throw new Error(\"Line \" + (lineNum+1) + \" does not start with a colon (:).\");\n    else\n      lineNum++;\n    //Number of bytes (hex digit pairs) in the data field\n    var dataLength = parseInt(data.substr(pos, 2), 16);\n    pos += 2;\n    //Get 16-bit address (big-endian)\n    var lowAddress = parseInt(data.substr(pos, 4), 16);\n    pos += 4;\n    //Record type\n    var recordType = parseInt(data.substr(pos, 2), 16);\n    pos += 2;\n    //Data field (hex-encoded string)\n    var dataField = data.substr(pos, dataLength * 2),\n      dataFieldBuf = Buffer.from(dataField, \"hex\");\n    pos += dataLength * 2;\n    //Checksum\n    var checksum = parseInt(data.substr(pos, 2), 16);\n    pos += 2;\n    //Validate checksum\n    var calcChecksum = (dataLength + (lowAddress >> 8) +\n      lowAddress + recordType) & 0xFF;\n    for(var i = 0; i < dataLength; i++)\n      calcChecksum = (calcChecksum + dataFieldBuf[i]) & 0xFF;\n    calcChecksum = (0x100 - calcChecksum) & 0xFF;\n    if(checksum !== calcChecksum)\n      throw new Error(\"Invalid checksum on line \" + lineNum +\n        \": got \" + checksum + \", but expected \" + calcChecksum);\n    //Parse the record based on its recordType\n    switch(recordType)\n    {\n      case DATA:\n        var absoluteAddress = highAddress + lowAddress;\n        //Expand buf, if necessary\n        if(absoluteAddress + dataLength >= buf.length)\n        {\n          var tmp = Buffer.alloc((absoluteAddress + dataLength) * 2);\n          buf.copy(tmp, 0, 0, bufLength);\n          buf = tmp;\n        }\n        //Write over skipped bytes with EMPTY_VALUE\n        if(absoluteAddress > bufLength)\n          buf.fill(EMPTY_VALUE, bufLength, absoluteAddress);\n        //Write the dataFieldBuf to buf\n        dataFieldBuf.copy(buf, absoluteAddress);\n        bufLength = Math.max(bufLength, absoluteAddress + dataLength);\n        break;\n      case END_OF_FILE:\n        if(dataLength !== 0)\n          throw new Error(\"Invalid EOF record on line \" +\n            lineNum + \".\");\n        return {\n          \"data\": buf.slice(0, bufLength),\n          \"startSegmentAddress\": startSegmentAddress,\n          \"startLinearAddress\": startLinearAddress\n        };\n      case EXT_SEGMENT_ADDR:\n        if(dataLength !== 2 || lowAddress !== 0)\n          throw new Error(\"Invalid extended segment address record on line \" + lineNum + \".\");\n        highAddress = parseInt(dataField, 16) << 4;\n        break;\n      case START_SEGMENT_ADDR:\n        if(dataLength !== 4 || lowAddress !== 0)\n          throw new Error(\"Invalid start segment address record on line \" + lineNum + \".\");\n        startSegmentAddress = parseInt(dataField, 16);\n        break;\n      case EXT_LINEAR_ADDR:\n        if(dataLength !== 2 || lowAddress !== 0)\n          throw new Error(\"Invalid extended linear address record on line \" +\n            lineNum + \".\");\n        highAddress = parseInt(dataField, 16) << 16;\n        break;\n      case START_LINEAR_ADDR:\n        if(dataLength !== 4 || lowAddress !== 0)\n          throw new Error(\"Invalid start linear address record on line \" + lineNum + \".\");\n        startLinearAddress = parseInt(dataField, 16);\n        break;\n      default:\n        throw new Error(\"Invalid record type (\" + recordType + \") on line \" + lineNum);\n    }\n    //Advance to the next line\n    if(data.charAt(pos) === \"\\r\")\n      pos++;\n    if(data.charAt(pos) === \"\\n\")\n      pos++;\n  }\n  throw new Error(\"Unexpected end of input: missing or invalid EOF record.\");\n};"],"names":["_Pact","prototype","then","onFulfilled","onRejected","result","state","this","s","callback","_settle","v","e","o","_this","value","pact","bind","observer","_isSettledPact","thenable","_for","test","update","body","stage","shouldContinue","updateValue","reject","_resumeAfterTest","_resumeAfterBody","_resumeAfterUpdate","_catch","recover","Symbol","iterator","asyncIterator","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","getLens","b64","Error","validLen","indexOf","encodeChunk","uint8","start","end","num","output","push","join","lens","placeHoldersLen","tmp","arr","_byteLength","curByte","extraBytes","parts","len2","buffer","offset","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","NaN","Infinity","Math","pow","c","rt","abs","isNaN","floor","log","LN2","customInspectSymbol","for","exports","Buffer","alloc","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","arg","encodingOrOffset","TypeError","allocUnsafe","from","string","encoding","isEncoding","byteLength","actual","write","slice","fromString","ArrayBuffer","isView","fromArrayLike","isInstance","array","byteOffset","undefined","fromArrayBuffer","valueOf","b","obj","isBuffer","checked","copy","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","utf16leToBytes","base64","fromByteArray","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","defineProperty","enumerable","get","species","configurable","writable","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","max","INSPECT_MAX_BYTES","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","ieee754","writeDouble","newBuf","subarray","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","set","INVALID_BASE64_RE","leadSurrogate","toByteArray","split","base64clean","src","dst","constructor","name","table","i16","Cmnd_STK_GET_SYNC","Cmnd_STK_SET_DEVICE","Cmnd_STK_ENTER_PROGMODE","Cmnd_STK_LOAD_ADDRESS","Cmnd_STK_PROG_PAGE","Cmnd_STK_LEAVE_PROGMODE","Cmnd_STK_READ_SIGN","Sync_CRC_EOP","Resp_STK_OK","Resp_STK_INSYNC","Resp_STK_NOSYNC","Cmnd_STK_READ_PAGE","OK_RESPONSE","sendCommand","opt","reader","writer","timeout","responseData","responseLength","cmd","Statics","err","message","startingBytes","started","timeoutId","isReading","finished","clearTimeout","setTimeout","done","TextDecoder","decode","index","handleChunk","receiveData","bufferEqual","sync","serial","attempts","tries","_exit2","loadAddress","useaddr","isAvailable","navigator","connect","requestOptions","filters","vendorId","requestPort","port","open","baudrate","readable","getReader","getWriter","parseHex","hex","bufferSize","bufLength","highAddress","startSegmentAddress","startLinearAddress","lineNum","charAt","dataLength","lowAddress","recordType","dataField","dataFieldBuf","checksum","calcChecksum","absoluteAddress","parseIntelHex","flash","hexData","board","setSignals","rts","dtr","Promise","resolve","reset","parameters","pagesizehigh","pagesizelow","sign","signature","match","verifySignature","options","devicecode","revision","progtype","parmode","polling","selftimed","lockbytes","fusebytes","flashpollval1","flashpollval2","eeprompollval1","eeprompollval2","eepromsizehigh","eepromsizelow","flashsize4","flashsize3","flashsize2","flashsize1","setOptions","enterProgrammingMode","pageSize","writeBytes","pageaddr","loadPage","upload","verifyPage","verify","exitProgrammingMode","bootload","flashResult"],"mappings":"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"}